{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Downloads/spacexAssignment/serene-cove-91720/src/Components/MissionCard/missionCardComponent.js\";\nimport React from \"react\";\nimport { observer } from \"mobx-react\";\nimport { Container, ImageContainer, Image, Label, MissionName, LabelContainer, Value, MissionIdList, MissionId } from \"./styledComponents.js\";\n\nconst getValueByItsType = value => {\n  if (typeof value === \"string\") {\n    return value;\n  } else if (typeof value === \"boolean\") {\n    if (value) {\n      return \"Yes\";\n    }\n\n    return \"No\";\n  }\n};\n\nconst renderLabels = (label, value) => /*#__PURE__*/React.createElement(LabelContainer, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(Label, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }\n}, label), /*#__PURE__*/React.createElement(Value, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }\n}, getValueByItsType(value) ? getValueByItsType(value) : `NA`));\n\nfunction MissionCard(props) {\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ImageContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: props.mission.links.mission_patch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(MissionName, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, `${props.mission.mission_name} #${props.mission.flight_number}`), /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, `Mission Ids : `), /*#__PURE__*/React.createElement(MissionIdList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, props.mission.mission_id.length > 0 ? props.mission.mission_id.map(id => /*#__PURE__*/React.createElement(MissionId, {\n    key: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, id)) : /*#__PURE__*/React.createElement(Value, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, `NA`)), renderLabels(`Launch Year: `, props.mission.launch_year), renderLabels(`Successful Launch : `, props.mission.launch_success), renderLabels(`Successful Landing : `, props.mission.rocket.first_stage.cores[0].land_success));\n}\n\nexport default observer(MissionCard);","map":{"version":3,"sources":["/Users/mac/Downloads/spacexAssignment/serene-cove-91720/src/Components/MissionCard/missionCardComponent.js"],"names":["React","observer","Container","ImageContainer","Image","Label","MissionName","LabelContainer","Value","MissionIdList","MissionId","getValueByItsType","value","renderLabels","label","MissionCard","props","mission","links","mission_patch","mission_name","flight_number","mission_id","length","map","id","launch_year","launch_success","rocket","first_stage","cores","land_success"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,YAAzB;AAEA,SACEC,SADF,EAEEC,cAFF,EAGEC,KAHF,EAIEC,KAJF,EAKEC,WALF,EAMEC,cANF,EAOEC,KAPF,EAQEC,aARF,EASEC,SATF,QAUO,uBAVP;;AAYA,MAAMC,iBAAiB,GAAIC,KAAD,IAAW;AACnC,MAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC7B,WAAOA,KAAP;AACD,GAFD,MAEO,IAAI,OAAOA,KAAP,KAAiB,SAArB,EAAgC;AACrC,QAAIA,KAAJ,EAAW;AACT,aAAO,KAAP;AACD;;AACD,WAAO,IAAP;AACD;AACF,CATD;;AAWA,MAAMC,YAAY,GAAG,CAACC,KAAD,EAAQF,KAAR,kBACnB,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAQE,KAAR,CADF,eAEE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAQH,iBAAiB,CAACC,KAAD,CAAjB,GAA2BD,iBAAiB,CAACC,KAAD,CAA5C,GAAuD,IAA/D,CAFF,CADF;;AAOA,SAASG,WAAT,CAAqBC,KAArB,EAA4B;AAC1B,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAEA,KAAK,CAACC,OAAN,CAAcC,KAAd,CAAoBC,aAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAe,GAAEH,KAAK,CAACC,OAAN,CAAcG,YAAa,KAAIJ,KAAK,CAACC,OAAN,CAAcI,aAAc,EAA5E,CAJF,eAKE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAS,gBAAT,CALF,eAME,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,KAAK,CAACC,OAAN,CAAcK,UAAd,CAAyBC,MAAzB,GAAkC,CAAlC,GACCP,KAAK,CAACC,OAAN,CAAcK,UAAd,CAAyBE,GAAzB,CAA8BC,EAAD,iBAC3B,oBAAC,SAAD;AAAW,IAAA,GAAG,EAAEA,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqBA,EAArB,CADF,CADD,gBAKC,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAS,IAAT,CANJ,CANF,EAeGZ,YAAY,CAAE,eAAF,EAAkBG,KAAK,CAACC,OAAN,CAAcS,WAAhC,CAff,EAgBGb,YAAY,CAAE,sBAAF,EAAyBG,KAAK,CAACC,OAAN,CAAcU,cAAvC,CAhBf,EAiBGd,YAAY,CACV,uBADU,EAEXG,KAAK,CAACC,OAAN,CAAcW,MAAd,CAAqBC,WAArB,CAAiCC,KAAjC,CAAuC,CAAvC,EAA0CC,YAF/B,CAjBf,CADF;AAwBD;;AAED,eAAe9B,QAAQ,CAACc,WAAD,CAAvB","sourcesContent":["import React from \"react\";\nimport { observer } from \"mobx-react\";\n\nimport {\n  Container,\n  ImageContainer,\n  Image,\n  Label,\n  MissionName,\n  LabelContainer,\n  Value,\n  MissionIdList,\n  MissionId,\n} from \"./styledComponents.js\";\n\nconst getValueByItsType = (value) => {\n  if (typeof value === \"string\") {\n    return value;\n  } else if (typeof value === \"boolean\") {\n    if (value) {\n      return \"Yes\";\n    }\n    return \"No\";\n  }\n};\n\nconst renderLabels = (label, value) => (\n  <LabelContainer>\n    <Label>{label}</Label>\n    <Value>{getValueByItsType(value) ? getValueByItsType(value) : `NA`}</Value>\n  </LabelContainer>\n);\n\nfunction MissionCard(props) {\n  return (\n    <Container>\n      <ImageContainer>\n        <Image src={props.mission.links.mission_patch} />\n      </ImageContainer>\n      <MissionName>{`${props.mission.mission_name} #${props.mission.flight_number}`}</MissionName>\n      <Label>{`Mission Ids : `}</Label>\n      <MissionIdList>\n        {props.mission.mission_id.length > 0 ? (\n          props.mission.mission_id.map((id) => (\n            <MissionId key={id}>{id}</MissionId>\n          ))\n        ) : (\n          <Value>{`NA`}</Value>\n        )}\n      </MissionIdList>\n      {renderLabels(`Launch Year: `, props.mission.launch_year)}\n      {renderLabels(`Successful Launch : `, props.mission.launch_success)}\n      {renderLabels(\n        `Successful Landing : `,\n        props.mission.rocket.first_stage.cores[0].land_success\n      )}\n    </Container>\n  );\n}\n\nexport default observer(MissionCard);\n"]},"metadata":{},"sourceType":"module"}