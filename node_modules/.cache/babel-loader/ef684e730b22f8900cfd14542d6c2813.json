{"ast":null,"code":"import _regeneratorRuntime from\"/Users/mac/Downloads/spacexAssignment/serene-cove-91720/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/mac/Downloads/spacexAssignment/serene-cove-91720/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _initializerDefineProperty from\"/Users/mac/Downloads/spacexAssignment/serene-cove-91720/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty\";import _classCallCheck from\"/Users/mac/Downloads/spacexAssignment/serene-cove-91720/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/mac/Downloads/spacexAssignment/serene-cove-91720/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _applyDecoratedDescriptor from\"/Users/mac/Downloads/spacexAssignment/serene-cove-91720/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";import _initializerWarningHelper from\"/Users/mac/Downloads/spacexAssignment/serene-cove-91720/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper\";var _dec,_dec2,_dec3,_dec4,_dec5,_class,_descriptor,_descriptor2,_descriptor3,_descriptor4,_descriptor5,_temp;import{observable,action}from\"mobx\";var SpaceXStore=(_dec=action.bound,_dec2=action.bound,_dec3=action.bound,_dec4=action.bound,_dec5=action.bound,(_class=(_temp=/*#__PURE__*/function(){function SpaceXStore(){_classCallCheck(this,SpaceXStore);_initializerDefineProperty(this,\"isSelectedYear\",_descriptor,this);_initializerDefineProperty(this,\"launchValue\",_descriptor2,this);_initializerDefineProperty(this,\"landingValue\",_descriptor3,this);_initializerDefineProperty(this,\"missionsList\",_descriptor4,this);_initializerDefineProperty(this,\"currentURL\",_descriptor5,this);this.getLaunchValues=function(){return[\"True\",\"False\"];};this.getYears=function(){return[2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020];};this.init();}_createClass(SpaceXStore,[{key:\"init\",value:function init(){this.isSelectedYear=\"\";this.launchValue=\"\";this.landingValue=\"\";this.missionsList=null;this.currentURL=\"\";}},{key:\"setSelectedYear\",value:function setSelectedYear(value){if(this.isSelectedYear!==value){this.isSelectedYear=value;}else{this.isSelectedYear=\"\";}this.fetchData();}},{key:\"setLaunchValue\",value:function setLaunchValue(value){if(this.launchValue!==value){this.launchValue=value;}else{this.launchValue=\"\";}this.fetchData();}},{key:\"setLandingValue\",value:function setLandingValue(value){if(this.landingValue!==value){this.landingValue=value;}else{this.landingValue=\"\";}this.fetchData();}},{key:\"setData\",value:function setData(response){this.missionsList=response;}},{key:\"getURL\",value:function getURL(){var url=\"https://api.spaceXdata.com/v3/launches?limit=100\";if(this.launchValue){var isLaunchedSuccessfully=this.launchValue===\"True\"?true:false;url=url+\"&launch_success=\".concat(isLaunchedSuccessfully);}if(this.landingValue){var isLandedSuccessfully=this.landingValue===\"True\"?true:false;url=url+\"&land_success=\".concat(isLandedSuccessfully);}if(this.isSelectedYear){url=url+\"&launch_year=\".concat(this.isSelectedYear);}return url;}},{key:\"fetchData\",value:function(){var _fetchData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var url,res,response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:url=this.getURL();if(!(url!==this.currentURL)){_context.next=11;break;}this.missionsList=null;this.currentURL=url;_context.next=6;return fetch(url);case 6:res=_context.sent;_context.next=9;return res.json();case 9:response=_context.sent;this.setData(response);case 11:case\"end\":return _context.stop();}}},_callee,this);}));function fetchData(){return _fetchData.apply(this,arguments);}return fetchData;}()}]);return SpaceXStore;}(),_temp),(_descriptor=_applyDecoratedDescriptor(_class.prototype,\"isSelectedYear\",[observable],{configurable:true,enumerable:true,writable:true,initializer:null}),_descriptor2=_applyDecoratedDescriptor(_class.prototype,\"launchValue\",[observable],{configurable:true,enumerable:true,writable:true,initializer:null}),_descriptor3=_applyDecoratedDescriptor(_class.prototype,\"landingValue\",[observable],{configurable:true,enumerable:true,writable:true,initializer:null}),_descriptor4=_applyDecoratedDescriptor(_class.prototype,\"missionsList\",[observable],{configurable:true,enumerable:true,writable:true,initializer:null}),_descriptor5=_applyDecoratedDescriptor(_class.prototype,\"currentURL\",[observable],{configurable:true,enumerable:true,writable:true,initializer:null}),_applyDecoratedDescriptor(_class.prototype,\"setSelectedYear\",[_dec],Object.getOwnPropertyDescriptor(_class.prototype,\"setSelectedYear\"),_class.prototype),_applyDecoratedDescriptor(_class.prototype,\"setLaunchValue\",[_dec2],Object.getOwnPropertyDescriptor(_class.prototype,\"setLaunchValue\"),_class.prototype),_applyDecoratedDescriptor(_class.prototype,\"setLandingValue\",[_dec3],Object.getOwnPropertyDescriptor(_class.prototype,\"setLandingValue\"),_class.prototype),_applyDecoratedDescriptor(_class.prototype,\"setData\",[_dec4],Object.getOwnPropertyDescriptor(_class.prototype,\"setData\"),_class.prototype),_applyDecoratedDescriptor(_class.prototype,\"getURL\",[_dec5],Object.getOwnPropertyDescriptor(_class.prototype,\"getURL\"),_class.prototype)),_class));export default SpaceXStore;","map":{"version":3,"sources":["/Users/mac/Downloads/spacexAssignment/serene-cove-91720/src/stores/SpaceXStore/spaceXStore.js"],"names":["observable","action","SpaceXStore","bound","getLaunchValues","getYears","init","isSelectedYear","launchValue","landingValue","missionsList","currentURL","value","fetchData","response","url","isLaunchedSuccessfully","isLandedSuccessfully","getURL","fetch","res","json","setData"],"mappings":"+2CAAA,OAASA,UAAT,CAAqBC,MAArB,KAAmC,MAAnC,C,GAEMC,CAAAA,W,OAkBHD,MAAM,CAACE,K,OAUPF,MAAM,CAACE,K,OAUPF,MAAM,CAACE,K,OAkCPF,MAAM,CAACE,K,OAKPF,MAAM,CAACE,K,wCAvER,sBAAc,gXA0CdC,eA1Cc,CA0CI,UAAM,CACtB,MAAO,CAAC,MAAD,CAAS,OAAT,CAAP,CACD,CA5Ca,MA8CdC,QA9Cc,CA8CH,UAAM,CACf,MAAO,CACL,IADK,CAEL,IAFK,CAGL,IAHK,CAIL,IAJK,CAKL,IALK,CAML,IANK,CAOL,IAPK,CAQL,IARK,CASL,IATK,CAUL,IAVK,CAWL,IAXK,CAYL,IAZK,CAaL,IAbK,CAcL,IAdK,CAeL,IAfK,CAAP,CAiBD,CAhEa,CACZ,KAAKC,IAAL,GACD,C,2DAEM,CACL,KAAKC,cAAL,CAAsB,EAAtB,CACA,KAAKC,WAAL,CAAmB,EAAnB,CACA,KAAKC,YAAL,CAAoB,EAApB,CACA,KAAKC,YAAL,CAAoB,IAApB,CACA,KAAKC,UAAL,CAAkB,EAAlB,CACD,C,wDAGeC,K,CAAO,CACrB,GAAI,KAAKL,cAAL,GAAwBK,KAA5B,CAAmC,CACjC,KAAKL,cAAL,CAAsBK,KAAtB,CACD,CAFD,IAEO,CACL,KAAKL,cAAL,CAAsB,EAAtB,CACD,CACD,KAAKM,SAAL,GACD,C,sDAGcD,K,CAAO,CACpB,GAAI,KAAKJ,WAAL,GAAqBI,KAAzB,CAAgC,CAC9B,KAAKJ,WAAL,CAAmBI,KAAnB,CACD,CAFD,IAEO,CACL,KAAKJ,WAAL,CAAmB,EAAnB,CACD,CACD,KAAKK,SAAL,GACD,C,wDAGeD,K,CAAO,CACrB,GAAI,KAAKH,YAAL,GAAsBG,KAA1B,CAAiC,CAC/B,KAAKH,YAAL,CAAoBG,KAApB,CACD,CAFD,IAEO,CACL,KAAKH,YAAL,CAAoB,EAApB,CACD,CACD,KAAKI,SAAL,GACD,C,wCA2BOC,Q,CAAU,CAChB,KAAKJ,YAAL,CAAoBI,QAApB,CACD,C,uCAGQ,CACP,GAAIC,CAAAA,GAAG,mDAAP,CACA,GAAI,KAAKP,WAAT,CAAsB,CACpB,GAAMQ,CAAAA,sBAAsB,CAAG,KAAKR,WAAL,GAAqB,MAArB,CAA8B,IAA9B,CAAqC,KAApE,CACAO,GAAG,CAAGA,GAAG,2BAAsBC,sBAAtB,CAAT,CACD,CACD,GAAI,KAAKP,YAAT,CAAuB,CACrB,GAAMQ,CAAAA,oBAAoB,CAAG,KAAKR,YAAL,GAAsB,MAAtB,CAA+B,IAA/B,CAAsC,KAAnE,CACAM,GAAG,CAAGA,GAAG,yBAAoBE,oBAApB,CAAT,CACD,CACD,GAAI,KAAKV,cAAT,CAAyB,CACvBQ,GAAG,CAAGA,GAAG,wBAAmB,KAAKR,cAAxB,CAAT,CACD,CAED,MAAOQ,CAAAA,GAAP,CACD,C,mQAGOA,G,CAAM,KAAKG,MAAL,E,MACRH,GAAG,GAAK,KAAKJ,U,2BACf,KAAKD,YAAL,CAAoB,IAApB,CACA,KAAKC,UAAL,CAAkBI,GAAlB,C,sBACkBI,CAAAA,KAAK,CAACJ,GAAD,C,QAAjBK,G,qCACiBA,CAAAA,GAAG,CAACC,IAAJ,E,QAAjBP,Q,eACN,KAAKQ,OAAL,CAAaR,QAAb,E,6PArGHd,U,6IACAA,U,8IACAA,U,8IACAA,U,4IACAA,U,kzBAsGH,cAAeE,CAAAA,WAAf","sourcesContent":["import { observable, action } from \"mobx\";\n\nclass SpaceXStore {\n  @observable isSelectedYear;\n  @observable launchValue;\n  @observable landingValue;\n  @observable missionsList;\n  @observable currentURL;\n  constructor() {\n    this.init();\n  }\n\n  init() {\n    this.isSelectedYear = \"\";\n    this.launchValue = \"\";\n    this.landingValue = \"\";\n    this.missionsList = null;\n    this.currentURL = \"\";\n  }\n\n  @action.bound\n  setSelectedYear(value) {\n    if (this.isSelectedYear !== value) {\n      this.isSelectedYear = value;\n    } else {\n      this.isSelectedYear = \"\";\n    }\n    this.fetchData();\n  }\n\n  @action.bound\n  setLaunchValue(value) {\n    if (this.launchValue !== value) {\n      this.launchValue = value;\n    } else {\n      this.launchValue = \"\";\n    }\n    this.fetchData();\n  }\n\n  @action.bound\n  setLandingValue(value) {\n    if (this.landingValue !== value) {\n      this.landingValue = value;\n    } else {\n      this.landingValue = \"\";\n    }\n    this.fetchData();\n  }\n\n  getLaunchValues = () => {\n    return [\"True\", \"False\"];\n  };\n\n  getYears = () => {\n    return [\n      2006,\n      2007,\n      2008,\n      2009,\n      2010,\n      2011,\n      2012,\n      2013,\n      2014,\n      2015,\n      2016,\n      2017,\n      2018,\n      2019,\n      2020,\n    ];\n  };\n\n  @action.bound\n  setData(response) {\n    this.missionsList = response;\n  }\n\n  @action.bound\n  getURL() {\n    let url = `https://api.spaceXdata.com/v3/launches?limit=100`;\n    if (this.launchValue) {\n      const isLaunchedSuccessfully = this.launchValue === \"True\" ? true : false;\n      url = url + `&launch_success=${isLaunchedSuccessfully}`;\n    }\n    if (this.landingValue) {\n      const isLandedSuccessfully = this.landingValue === \"True\" ? true : false;\n      url = url + `&land_success=${isLandedSuccessfully}`;\n    }\n    if (this.isSelectedYear) {\n      url = url + `&launch_year=${this.isSelectedYear}`;\n    }\n\n    return url;\n  }\n\n  async fetchData() {\n    const url = this.getURL();\n    if (url !== this.currentURL) {\n      this.missionsList = null;\n      this.currentURL = url;\n      const res = await fetch(url);\n      const response = await res.json();\n      this.setData(response);\n    }\n  }\n}\n\nexport default SpaceXStore;\n"]},"metadata":{},"sourceType":"module"}