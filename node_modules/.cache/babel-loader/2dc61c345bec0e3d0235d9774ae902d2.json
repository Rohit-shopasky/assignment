{"ast":null,"code":"import _initializerDefineProperty from \"/Users/mac/Downloads/spacexAssignment/serene-cove-91720/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"/Users/mac/Downloads/spacexAssignment/serene-cove-91720/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"/Users/mac/Downloads/spacexAssignment/serene-cove-91720/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _dec, _dec2, _dec3, _dec4, _dec5, _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _temp;\n\nimport { observable, action } from \"mobx\";\nlet SpaceXStore = (_dec = action.bound, _dec2 = action.bound, _dec3 = action.bound, _dec4 = action.bound, _dec5 = action.bound, (_class = (_temp = class SpaceXStore {\n  constructor() {\n    _initializerDefineProperty(this, \"isSelectedYear\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"launchValue\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"landingValue\", _descriptor3, this);\n\n    _initializerDefineProperty(this, \"missionsList\", _descriptor4, this);\n\n    _initializerDefineProperty(this, \"currentURL\", _descriptor5, this);\n\n    this.getLaunchValues = () => {\n      return [\"True\", \"False\"];\n    };\n\n    this.getYears = () => {\n      return [2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020];\n    };\n\n    this.init();\n  }\n\n  init() {\n    this.isSelectedYear = \"\";\n    this.launchValue = \"\";\n    this.landingValue = \"\";\n    this.missionsList = null;\n    this.currentURL = \"\";\n  }\n\n  setSelectedYear(value) {\n    if (this.isSelectedYear !== value) {\n      this.isSelectedYear = value;\n    } else {\n      this.isSelectedYear = \"\";\n    }\n\n    this.fetchData();\n  }\n\n  setLaunchValue(value) {\n    if (this.launchValue !== value) {\n      this.launchValue = value;\n    } else {\n      this.launchValue = \"\";\n    }\n\n    this.fetchData();\n  }\n\n  setLandingValue(value) {\n    if (this.landingValue !== value) {\n      this.landingValue = value;\n    } else {\n      this.landingValue = \"\";\n    }\n\n    this.fetchData();\n  }\n\n  setData(response) {\n    this.missionsList = response;\n  }\n\n  getURL() {\n    let url = `https://api.spaceXdata.com/v3/launches?limit=100`;\n\n    if (this.launchValue) {\n      const isLaunchedSuccessfully = this.launchValue === \"True\" ? true : false;\n      url = url + `&launch_success=${isLaunchedSuccessfully}`;\n    }\n\n    if (this.landingValue) {\n      const isLandedSuccessfully = this.landingValue === \"True\" ? true : false;\n      url = url + `&land_success=${isLandedSuccessfully}`;\n    }\n\n    if (this.isSelectedYear) {\n      url = url + `&launch_year=${this.isSelectedYear}`;\n    }\n\n    return url;\n  }\n\n  async fetchData() {\n    const url = this.getURL();\n\n    if (url !== this.currentURL) {\n      this.missionsList = null;\n      this.currentURL = url;\n      const res = await fetch(url);\n      const response = await res.json();\n      this.setData(response);\n    }\n  }\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"isSelectedYear\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"launchValue\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"landingValue\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, \"missionsList\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor5 = _applyDecoratedDescriptor(_class.prototype, \"currentURL\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _applyDecoratedDescriptor(_class.prototype, \"setSelectedYear\", [_dec], Object.getOwnPropertyDescriptor(_class.prototype, \"setSelectedYear\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"setLaunchValue\", [_dec2], Object.getOwnPropertyDescriptor(_class.prototype, \"setLaunchValue\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"setLandingValue\", [_dec3], Object.getOwnPropertyDescriptor(_class.prototype, \"setLandingValue\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"setData\", [_dec4], Object.getOwnPropertyDescriptor(_class.prototype, \"setData\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"getURL\", [_dec5], Object.getOwnPropertyDescriptor(_class.prototype, \"getURL\"), _class.prototype)), _class));\nexport default SpaceXStore;","map":{"version":3,"sources":["/Users/mac/Downloads/spacexAssignment/serene-cove-91720/src/stores/SpaceXStore/spaceXStore.js"],"names":["observable","action","SpaceXStore","bound","constructor","getLaunchValues","getYears","init","isSelectedYear","launchValue","landingValue","missionsList","currentURL","setSelectedYear","value","fetchData","setLaunchValue","setLandingValue","setData","response","getURL","url","isLaunchedSuccessfully","isLandedSuccessfully","res","fetch","json"],"mappings":"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","sourcesContent":["import { observable, action } from \"mobx\";\n\nclass SpaceXStore {\n  @observable isSelectedYear;\n  @observable launchValue;\n  @observable landingValue;\n  @observable missionsList;\n  @observable currentURL;\n  constructor() {\n    this.init();\n  }\n\n  init() {\n    this.isSelectedYear = \"\";\n    this.launchValue = \"\";\n    this.landingValue = \"\";\n    this.missionsList = null;\n    this.currentURL = \"\";\n  }\n\n  @action.bound\n  setSelectedYear(value) {\n    if (this.isSelectedYear !== value) {\n      this.isSelectedYear = value;\n    } else {\n      this.isSelectedYear = \"\";\n    }\n    this.fetchData();\n  }\n\n  @action.bound\n  setLaunchValue(value) {\n    if (this.launchValue !== value) {\n      this.launchValue = value;\n    } else {\n      this.launchValue = \"\";\n    }\n    this.fetchData();\n  }\n\n  @action.bound\n  setLandingValue(value) {\n    if (this.landingValue !== value) {\n      this.landingValue = value;\n    } else {\n      this.landingValue = \"\";\n    }\n    this.fetchData();\n  }\n\n  getLaunchValues = () => {\n    return [\"True\", \"False\"];\n  };\n\n  getYears = () => {\n    return [\n      2006,\n      2007,\n      2008,\n      2009,\n      2010,\n      2011,\n      2012,\n      2013,\n      2014,\n      2015,\n      2016,\n      2017,\n      2018,\n      2019,\n      2020,\n    ];\n  };\n\n  @action.bound\n  setData(response) {\n    this.missionsList = response;\n  }\n\n  @action.bound\n  getURL() {\n    let url = `https://api.spaceXdata.com/v3/launches?limit=100`;\n    if (this.launchValue) {\n      const isLaunchedSuccessfully = this.launchValue === \"True\" ? true : false;\n      url = url + `&launch_success=${isLaunchedSuccessfully}`;\n    }\n    if (this.landingValue) {\n      const isLandedSuccessfully = this.landingValue === \"True\" ? true : false;\n      url = url + `&land_success=${isLandedSuccessfully}`;\n    }\n    if (this.isSelectedYear) {\n      url = url + `&launch_year=${this.isSelectedYear}`;\n    }\n\n    return url;\n  }\n\n  async fetchData() {\n    const url = this.getURL();\n    if (url !== this.currentURL) {\n      this.missionsList = null;\n      this.currentURL = url;\n      const res = await fetch(url);\n      const response = await res.json();\n      this.setData(response);\n    }\n  }\n}\n\nexport default SpaceXStore;\n"]},"metadata":{},"sourceType":"module"}